{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"reference/","title":"Reference documentation","text":"<p>Info</p> <p>Select an item in the navigation menu to browse a specific page.</p>"},{"location":"reference/json-schemas/","title":"JSON schemas","text":"<p>JSON schemas for policies are available:</p> <ul> <li>AuthorizationPolicy (v1alpha1)</li> </ul> <p>They can be used to enable validation and autocompletion in your IDE.</p>"},{"location":"reference/json-schemas/#vs-code","title":"VS code","text":"<p>In VS code, simply add a comment on top of your YAML resources.</p>"},{"location":"reference/json-schemas/#authorizationpolicy","title":"AuthorizationPolicy","text":"<pre><code># yaml-language-server: $schema=https://github.com/eddycharly/generic-auth-server/blob/main/.schemas/json/authorizationpolicy-generic-v1alpha1.json\napiVersion: generic.kyverno.io/v1alpha1\nkind: AuthorizationPolicy\nmetadata:\n  name: demo-policy.example.com\nspec:\n  authorizations:\n  - expression: &gt;\n      \"bar\" in object.Header(\"foo\")\n        ? auth\n            .Response(401)\n            .WithBody(\"bye\")\n            .WithHeader(\"xxx\", \"yyy\")\n        : auth\n            .Response(200)\n</code></pre>"},{"location":"reference/apis/policy.v1alpha1/","title":"policy (v1alpha1)","text":""},{"location":"reference/apis/policy.v1alpha1/#resource-types","title":"Resource Types","text":"<ul> <li>AuthorizationPolicy</li> </ul>"},{"location":"reference/apis/policy.v1alpha1/#generic-kyverno-io-v1alpha1-AuthorizationPolicy","title":"AuthorizationPolicy","text":"<p>AuthorizationPolicy defines an authorization policy resource</p> Field Type Required Inline Description <code>apiVersion</code> <code>string</code> <code>generic.kyverno.io/v1alpha1</code> <code>kind</code> <code>string</code> <code>AuthorizationPolicy</code> <code>metadata</code> <code>meta/v1.ObjectMeta</code> No description provided. <code>spec</code> <code>AuthorizationPolicySpec</code> No description provided."},{"location":"reference/apis/policy.v1alpha1/#generic-kyverno-io-v1alpha1-Authorization","title":"Authorization","text":"<p>Appears in:</p> <ul> <li>AuthorizationPolicySpec</li> </ul> <p>Authorization defines an authorization policy rule</p> Field Type Required Inline Description <code>expression</code> <code>string</code> <p>Expression represents the expression which will be evaluated by CEL. ref: https://github.com/google/cel-spec CEL expressions have access to CEL variables as well as some other useful variables: - 'object' - The incoming request. CEL expressions are expected to return an model Response.</p>"},{"location":"reference/apis/policy.v1alpha1/#generic-kyverno-io-v1alpha1-AuthorizationPolicySpec","title":"AuthorizationPolicySpec","text":"<p>Appears in:</p> <ul> <li>AuthorizationPolicy</li> </ul> <p>AuthorizationPolicySpec defines the spec of an authorization policy</p> Field Type Required Inline Description <code>failurePolicy</code> <code>admissionregistration/v1.FailurePolicyType</code> <p>FailurePolicy defines how to handle failures for the policy. Failures can occur from CEL expression parse errors, type check errors, runtime errors and invalid or mis-configured policy definitions. FailurePolicy does not define how validations that evaluate to false are handled. Allowed values are Ignore or Fail. Defaults to Fail.</p> <code>variables</code> <code>[]admissionregistration/v1.Variable</code> <p>Variables contain definitions of variables that can be used in composition of other expressions. Each variable is defined as a named CEL expression. The variables defined here will be available under <code>variables</code> in other expressions of the policy except MatchConditions because MatchConditions are evaluated before the rest of the policy. The expression of a variable can refer to other variables defined earlier in the list but not those after. Thus, Variables must be sorted by the order of first appearance and acyclic.</p> <code>authorizations</code> <code>[]Authorization</code> <p>Authorizations contain CEL expressions which is used to apply the authorization.</p>"}]}